{"ast":null,"code":"var _jsxFileName = \"/Users/gab/Desktop/Projects/tutorial/starter/src/index.js\";\nimport { React, useState, useEffect, useReducer } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { useFetch } from \"./usefetch\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst attribute = \"banana\";\n\nconst CheckProps = ({\n  name,\n  age\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [name, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n      children: age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nCheckProps.propTypes = {\n  name: PropTypes.string.isRequired,\n  age: PropTypes.string.isRequired\n};\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    products\n  } = useFetch(attribute);\n  useEffect(() => {\n    let cleanIt = true;\n    setTimeout(() => {\n      if (cleanIt) {\n        setIsLoading(false);\n      }\n    }, 5000);\n    return () => {\n      cleanIt = false;\n      console.log(\"b\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Is loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"This is my app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"These are my thoughts: \", products]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nReactDom.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/starter/src/index.js"],"names":["React","useState","useEffect","useReducer","ReactDom","useFetch","propTypes","attribute","CheckProps","name","age","PropTypes","string","isRequired","App","isLoading","setIsLoading","products","cleanIt","setTimeout","console","log","render","document","getElementById"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,QAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAmB;AACpC,sBACE;AAAA,eACGD,IADH,oBACS;AAAA,gBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,YADT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQAF,UAAU,CAACF,SAAX,GAAuB;AACrBG,EAAAA,IAAI,EAAEE,SAAS,CAACC,MAAV,CAAiBC,UADF;AAErBH,EAAAA,GAAG,EAAEC,SAAS,CAACC,MAAV,CAAiBC;AAFD,CAAvB;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAeZ,QAAQ,CAACE,SAAD,CAA7B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,OAAO,GAAG,IAAd;AACAC,IAAAA,UAAU,CAAC,MAAM;AACf,UAAID,OAAJ,EAAa;AACXF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAJS,EAIP,IAJO,CAAV;AAKA,WAAO,MAAM;AACXE,MAAAA,OAAO,GAAG,KAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,KAHD;AAID,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,eACGN,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADhB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,4CAA4BE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CAxBD;;AA0BAb,QAAQ,CAACkB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import { React, useState, useEffect, useReducer } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { useFetch } from \"./usefetch\";\nimport propTypes from \"prop-types\";\n\nconst attribute = \"banana\";\n\nconst CheckProps = ({ name, age }) => {\n  return (\n    <h3>\n      {name} <b>{age}</b>\n    </h3>\n  );\n};\n\nCheckProps.propTypes = {\n  name: PropTypes.string.isRequired,\n  age: PropTypes.string.isRequired,\n};\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const { products } = useFetch(attribute);\n\n  useEffect(() => {\n    let cleanIt = true;\n    setTimeout(() => {\n      if (cleanIt) {\n        setIsLoading(false);\n      }\n    }, 5000);\n    return () => {\n      cleanIt = false;\n      console.log(\"b\");\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h3>Is loading...</h3>}\n      <div>This is my app</div>\n      <h3>These are my thoughts: {products}</h3>\n    </>\n  );\n};\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}