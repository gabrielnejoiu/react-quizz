{"ast":null,"code":"var _jsxFileName = \"/Users/gab/Desktop/Projects/tutorial/quizz/src/components/quizzWrapper.js\";\nimport React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\nimport ProgressBar from \"./progressBar\";\nimport Navigation from \"./navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n  console.log(userAnswer[slide].answer);\n\n  const updateAnswer = index => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (slide < inputData.length && (userAnswer[slide].answer == 0 || userAnswer[slide].answer)) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizz_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizz_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quizz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizz_slides\",\n        children: [/*#__PURE__*/_jsxDEV(Slide, {\n          data: userAnswer,\n          currentSlide: slide,\n          updateAnswer: updateAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation\",\n          children: [/*#__PURE__*/_jsxDEV(Navigation, {\n            slide: slide,\n            prevSlide: prevSlide,\n            nextSlide: nextSlide,\n            dataLength: inputData.length,\n            answerType: typeof userAnswer[slide].answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n            props: {\n              slidesCount: inputData.length,\n              currentSlide: slide\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Quizz;","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/quizz/src/components/quizzWrapper.js"],"names":["React","useState","Slide","inputData","ProgressBar","Navigation","Quizz","slide","setSlide","userAnswer","setUserAnswer","console","log","answer","updateAnswer","index","newObj","nextSlide","length","prevSlide","slidesCount","currentSlide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACE,SAAD,CAA5C;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACF,KAAD,CAAV,CAAkBM,MAA9B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,MAAM,GAAG,CAAC,GAAGP,UAAJ,CAAf;AACAO,IAAAA,MAAM,CAACT,KAAD,CAAN,CAAcM,MAAd,GAAuBE,KAAvB;AACAL,IAAAA,aAAa,CAACM,MAAD,CAAb;AACD,GAJD;;AAMA,QAAMC,SAAS,GAAG,MAAM;AACtB,QACEV,KAAK,GAAGJ,SAAS,CAACe,MAAlB,KACCT,UAAU,CAACF,KAAD,CAAV,CAAkBM,MAAlB,IAA4B,CAA5B,IAAiCJ,UAAU,CAACF,KAAD,CAAV,CAAkBM,MADpD,CADF,EAGE;AACAL,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAPD;;AASA,QAAMY,SAAS,GAAG,MAAM;AACtB,QAAIZ,KAAK,GAAG,CAAZ,EAAe;AACbC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEE,UADR;AAEE,UAAA,YAAY,EAAEF,KAFhB;AAGE,UAAA,YAAY,EAAEO;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,KAAK,EAAEP,KADT;AAEE,YAAA,SAAS,EAAEY,SAFb;AAGE,YAAA,SAAS,EAAEF,SAHb;AAIE,YAAA,UAAU,EAAEd,SAAS,CAACe,MAJxB;AAKE,YAAA,UAAU,EAAE,OAAOT,UAAU,CAACF,KAAD,CAAV,CAAkBM;AALvC;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,WAAD;AACE,YAAA,KAAK,EAAE;AAAEO,cAAAA,WAAW,EAAEjB,SAAS,CAACe,MAAzB;AAAiCG,cAAAA,YAAY,EAAEd;AAA/C;AADT;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAvDD;;AAyDA,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\nimport ProgressBar from \"./progressBar\";\nimport Navigation from \"./navigation\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n\n  console.log(userAnswer[slide].answer);\n\n  const updateAnswer = (index) => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (\n      slide < inputData.length &&\n      (userAnswer[slide].answer == 0 || userAnswer[slide].answer)\n    ) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  return (\n    <div className=\"quizz_wrapper\">\n      <div className=\"quizz_container\">\n        <h1>Quizz</h1>\n        <div className=\"quizz_slides\">\n          <Slide\n            data={userAnswer}\n            currentSlide={slide}\n            updateAnswer={updateAnswer}\n          />\n\n          <div className=\"navigation\">\n            <Navigation\n              slide={slide}\n              prevSlide={prevSlide}\n              nextSlide={nextSlide}\n              dataLength={inputData.length}\n              answerType={typeof userAnswer[slide].answer}\n            />\n\n            <ProgressBar\n              props={{ slidesCount: inputData.length, currentSlide: slide }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quizz;\n"]},"metadata":{},"sourceType":"module"}