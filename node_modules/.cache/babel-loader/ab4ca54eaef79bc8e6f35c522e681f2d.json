{"ast":null,"code":"var _jsxFileName = \"/Users/gab/Desktop/Projects/tutorial/quizz/src/components/quizzWrapper.js\";\nimport React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n  const fill = {\n    width: 100 / inputData.length * (slide + 1) + \"%\"\n  };\n\n  const updateAnswer = index => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (slide < inputData.length && userAnswer[slide].answer) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizz_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quizz_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Quizz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizz_slides\",\n        children: [/*#__PURE__*/_jsxDEV(Slide, {\n          data: userAnswer,\n          currentSlide: slide,\n          updateAnswer: updateAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `arrow arrow_left ${slide === 0 ? \"inactive\" : \"\"}`,\n            onClick: prevSlide\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `arrow arrow_right ${slide === inputData.length || !userAnswer[slide].answer ? \"inactive\" : \"\"}`,\n            onClick: nextSlide\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress_bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fill\",\n              style: fill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Quizz;","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/quizz/src/components/quizzWrapper.js"],"names":["React","useState","Slide","inputData","Quizz","slide","setSlide","userAnswer","setUserAnswer","fill","width","length","updateAnswer","index","newObj","answer","nextSlide","prevSlide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACE,SAAD,CAA5C;AAEA,QAAMM,IAAI,GAAG;AAAEC,IAAAA,KAAK,EAAG,MAAMP,SAAS,CAACQ,MAAjB,IAA4BN,KAAK,GAAG,CAApC,IAAyC;AAAlD,GAAb;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,MAAM,GAAG,CAAC,GAAGP,UAAJ,CAAf;AACAO,IAAAA,MAAM,CAACT,KAAD,CAAN,CAAcU,MAAd,GAAuBF,KAAvB;AACAL,IAAAA,aAAa,CAACM,MAAD,CAAb;AACD,GAJD;;AAMA,QAAME,SAAS,GAAG,MAAM;AACtB,QAAIX,KAAK,GAAGF,SAAS,CAACQ,MAAlB,IAA4BJ,UAAU,CAACF,KAAD,CAAV,CAAkBU,MAAlD,EAA0D;AACxDT,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJD;;AAMA,QAAMY,SAAS,GAAG,MAAM;AACtB,QAAIZ,KAAK,GAAG,CAAZ,EAAe;AACbC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEE,UADR;AAEE,UAAA,YAAY,EAAEF,KAFhB;AAGE,UAAA,YAAY,EAAEO;AAHhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAG,oBAAmBP,KAAK,KAAK,CAAV,GAAc,UAAd,GAA2B,EAAG,EAD/D;AAEE,YAAA,OAAO,EAAEY;AAFX;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,SAAS,EAAG,qBACVZ,KAAK,KAAKF,SAAS,CAACQ,MAApB,IAA8B,CAACJ,UAAU,CAACF,KAAD,CAAV,CAAkBU,MAAjD,GACI,UADJ,GAEI,EACL,EALH;AAME,YAAA,OAAO,EAAEC;AANX;AAAA;AAAA;AAAA;AAAA,kBALF,eAaE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAEP;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAxDD;;AA0DA,eAAeL,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n\n  const fill = { width: (100 / inputData.length) * (slide + 1) + \"%\" };\n\n  const updateAnswer = (index) => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (slide < inputData.length && userAnswer[slide].answer) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  return (\n    <div className=\"quizz_wrapper\">\n      <div className=\"quizz_container\">\n        <h1>Quizz</h1>\n        <div className=\"quizz_slides\">\n          <Slide\n            data={userAnswer}\n            currentSlide={slide}\n            updateAnswer={updateAnswer}\n          />\n\n          <div className=\"navigation\">\n            <div\n              className={`arrow arrow_left ${slide === 0 ? \"inactive\" : \"\"}`}\n              onClick={prevSlide}\n            ></div>\n            <div\n              className={`arrow arrow_right ${\n                slide === inputData.length || !userAnswer[slide].answer\n                  ? \"inactive\"\n                  : \"\"\n              }`}\n              onClick={nextSlide}\n            ></div>\n            <div className=\"progress_bar\">\n              <div className=\"fill\" style={fill}></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quizz;\n"]},"metadata":{},"sourceType":"module"}