{"ast":null,"code":"var _jsxFileName = \"/Users/gab/Desktop/Projects/tutorial/starter/src/index.js\";\nimport { React, useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BookList() {\n  const [person, setPerson] = useState({\n    name: \"Name\",\n    age: 24,\n    message: \"random message\"\n  });\n\n  const removeItem = name => {\n    setPerson({ ...person,\n      name: \"new Name\"\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect called\");\n\n    const runState = () => setPerson({ ...person,\n      name: \"Ahaaa Name\"\n    });\n\n    window.addEventListener(\"resize\", runState);\n    return () => {\n      console.log(\"useEffect CLEANUP called\");\n    };\n  }, [person]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: person.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: person.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: person.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeItem(person.name),\n      children: [\"Change name \", person.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nReactDom.render( /*#__PURE__*/_jsxDEV(BookList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/starter/src/index.js"],"names":["React","useState","useEffect","ReactDom","BookList","person","setPerson","name","age","message","removeItem","console","log","runState","window","addEventListener","render","document","getElementById"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,MAD6B;AAEnCC,IAAAA,GAAG,EAAE,EAF8B;AAGnCC,IAAAA,OAAO,EAAE;AAH0B,GAAD,CAApC;;AAMA,QAAMC,UAAU,GAAIH,IAAD,IAAU;AAC3BD,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,MAAAA,IAAI,EAAE;AAAnB,KAAD,CAAT;AACD,GAFD;;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,UAAMC,QAAQ,GAAG,MAAMP,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,MAAAA,IAAI,EAAE;AAAnB,KAAD,CAAhC;;AACAO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;AACA,WAAO,MAAM;AACXF,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KAFD;AAGD,GAPQ,EAON,CAACP,MAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA,gBAAKA,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIH,MAAM,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMC,UAAU,CAACL,MAAM,CAACE,IAAR,CAAjC;AAAA,iCACeF,MAAM,CAACE,IADtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAUD;;AAEDJ,QAAQ,CAACa,MAAT,eAAgB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA8BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA9B","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\n\nfunction BookList() {\n  const [person, setPerson] = useState({\n    name: \"Name\",\n    age: 24,\n    message: \"random message\",\n  });\n\n  const removeItem = (name) => {\n    setPerson({ ...person, name: \"new Name\" });\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect called\");\n    const runState = () => setPerson({ ...person, name: \"Ahaaa Name\" });\n    window.addEventListener(\"resize\", runState);\n    return () => {\n      console.log(\"useEffect CLEANUP called\");\n    };\n  }, [person]);\n\n  return (\n    <>\n      <h1>{person.name}</h1>\n      <h4>{person.age}</h4>\n      <p>{person.message}</p>\n      <button onClick={() => removeItem(person.name)}>\n        Change name {person.name}\n      </button>\n    </>\n  );\n}\n\nReactDom.render(<BookList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}