{"ast":null,"code":"var _jsxFileName = \"/Users/gab/Desktop/Projects/tutorial/starter/src/index.js\";\nimport { React, useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = \"https://api.github.com/users\";\n\nfunction Users() {\n  const [users, setUsers] = useState([]);\n  const getU = new Promise((response, reject) => {\n    const usersData = fetch(url);\n\n    if (userData) {\n      response = \"ok\";\n    } else {\n      reject = \"error\";\n    }\n  });\n  getU.then();\n\n  const getUsers = async () => {\n    const response = await fetch(url);\n    const users = await response.json();\n    console.log(users);\n  };\n\n  useEffect(() => getUsers(), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Github Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nReactDom.render( /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/starter/src/index.js"],"names":["React","useState","useEffect","ReactDom","url","Users","users","setUsers","getU","Promise","response","reject","usersData","fetch","userData","then","getUsers","json","console","log","render","document","getElementById"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,GAAG,GAAG,8BAAZ;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,IAAI,GAAG,IAAIC,OAAJ,CAAY,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC7C,UAAMC,SAAS,GAAGC,KAAK,CAACT,GAAD,CAAvB;;AACA,QAAIU,QAAJ,EAAc;AACZJ,MAAAA,QAAQ,GAAG,IAAX;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAG,OAAT;AACD;AACF,GAPY,CAAb;AASAH,EAAAA,IAAI,CAACO,IAAL;;AAEA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAMN,QAAQ,GAAG,MAAMG,KAAK,CAACT,GAAD,CAA5B;AACA,UAAME,KAAK,GAAG,MAAMI,QAAQ,CAACO,IAAT,EAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAMc,QAAQ,EAAf,EAAmB,EAAnB,CAAT;AAEA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD;;AAEDb,QAAQ,CAACiB,MAAT,eAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport ReactDom from \"react-dom\";\n\nconst url = \"https://api.github.com/users\";\n\nfunction Users() {\n  const [users, setUsers] = useState([]);\n\n  const getU = new Promise((response, reject) => {\n    const usersData = fetch(url);\n    if (userData) {\n      response = \"ok\";\n    } else {\n      reject = \"error\";\n    }\n  });\n\n  getU.then();\n\n  const getUsers = async () => {\n    const response = await fetch(url);\n    const users = await response.json();\n    console.log(users);\n  };\n\n  useEffect(() => getUsers(), []);\n\n  return (\n    <>\n      <h3>Github Users</h3>\n    </>\n  );\n}\n\nReactDom.render(<Users />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}