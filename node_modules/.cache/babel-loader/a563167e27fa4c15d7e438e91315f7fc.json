{"ast":null,"code":"import _toConsumableArray from\"/Users/gab/Desktop/Projects/tutorial/quizz/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/gab/Desktop/Projects/tutorial/quizz/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Slide from\"./slide\";import inputData from\"./inputData\";import ProgressBar from\"./progressBar\";import Navigation from\"./navigation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Quizz=function Quizz(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),slide=_useState2[0],setSlide=_useState2[1];var _useState3=useState(inputData),_useState4=_slicedToArray(_useState3,2),userAnswer=_useState4[0],setUserAnswer=_useState4[1];var updateAnswer=function updateAnswer(index){var newObj=_toConsumableArray(userAnswer);newObj[slide].answer=index;setUserAnswer(newObj);};var nextSlide=function nextSlide(){if(slide<inputData.length&&(userAnswer[slide].answer===0||userAnswer[slide].answer)){setSlide(slide+1);}};var prevSlide=function prevSlide(){if(slide>0){setSlide(slide-1);}};var disabledNextBtn=false;if(slide===inputData.length||typeof userAnswer[slide].answer===\"undefined\"){disabledNextBtn=true;}return/*#__PURE__*/_jsx(\"div\",{className:\"quizz_wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quizz_container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Quizz\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"quizz_slides\",children:[/*#__PURE__*/_jsx(Slide,{data:userAnswer,currentSlide:slide,updateAnswer:updateAnswer}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation\",children:[/*#__PURE__*/_jsx(Navigation,{slide:slide,prevSlide:prevSlide,nextSlide:nextSlide,dataLength:inputData.length,disabledNextBtn:disabledNextBtn}),/*#__PURE__*/_jsx(ProgressBar,{props:{slidesCount:inputData.length,currentSlide:slide}})]})]})]})});};export default Quizz;","map":{"version":3,"sources":["/Users/gab/Desktop/Projects/tutorial/quizz/src/components/quizzWrapper.js"],"names":["React","useState","Slide","inputData","ProgressBar","Navigation","Quizz","slide","setSlide","userAnswer","setUserAnswer","updateAnswer","index","newObj","answer","nextSlide","length","prevSlide","disabledNextBtn","slidesCount","currentSlide"],"mappings":"kQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,cAA0BL,QAAQ,CAAC,CAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAAoCP,QAAQ,CAACE,SAAD,CAA5C,yCAAOM,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,MAAM,oBAAOJ,UAAP,CAAZ,CACAI,MAAM,CAACN,KAAD,CAAN,CAAcO,MAAd,CAAuBF,KAAvB,CACAF,aAAa,CAACG,MAAD,CAAb,CACD,CAJD,CAMA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GACER,KAAK,CAAGJ,SAAS,CAACa,MAAlB,GACCP,UAAU,CAACF,KAAD,CAAV,CAAkBO,MAAlB,GAA6B,CAA7B,EAAkCL,UAAU,CAACF,KAAD,CAAV,CAAkBO,MADrD,CADF,CAGE,CACAN,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CACF,CAPD,CASA,GAAMU,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIV,KAAK,CAAG,CAAZ,CAAe,CACbC,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CACD,CACF,CAJD,CAMA,GAAIW,CAAAA,eAAe,CAAG,KAAtB,CAEA,GACEX,KAAK,GAAKJ,SAAS,CAACa,MAApB,EACA,MAAOP,CAAAA,UAAU,CAACF,KAAD,CAAV,CAAkBO,MAAzB,GAAoC,WAFtC,CAGE,CACAI,eAAe,CAAG,IAAlB,CACD,CAED,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,aAAK,SAAS,CAAC,iBAAf,wBACE,6BADF,cAEE,aAAK,SAAS,CAAC,cAAf,wBACE,KAAC,KAAD,EACE,IAAI,CAAET,UADR,CAEE,YAAY,CAAEF,KAFhB,CAGE,YAAY,CAAEI,YAHhB,EADF,cAOE,aAAK,SAAS,CAAC,YAAf,wBACE,KAAC,UAAD,EACE,KAAK,CAAEJ,KADT,CAEE,SAAS,CAAEU,SAFb,CAGE,SAAS,CAAEF,SAHb,CAIE,UAAU,CAAEZ,SAAS,CAACa,MAJxB,CAKE,eAAe,CAAEE,eALnB,EADF,cASE,KAAC,WAAD,EACE,KAAK,CAAE,CAAEC,WAAW,CAAEhB,SAAS,CAACa,MAAzB,CAAiCI,YAAY,CAAEb,KAA/C,CADT,EATF,GAPF,GAFF,GADF,EADF,CA4BD,CA9DD,CAgEA,cAAeD,CAAAA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\nimport ProgressBar from \"./progressBar\";\nimport Navigation from \"./navigation\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n\n  const updateAnswer = (index) => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (\n      slide < inputData.length &&\n      (userAnswer[slide].answer === 0 || userAnswer[slide].answer)\n    ) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  let disabledNextBtn = false;\n\n  if (\n    slide === inputData.length ||\n    typeof userAnswer[slide].answer === \"undefined\"\n  ) {\n    disabledNextBtn = true;\n  }\n\n  return (\n    <div className=\"quizz_wrapper\">\n      <div className=\"quizz_container\">\n        <h1>Quizz</h1>\n        <div className=\"quizz_slides\">\n          <Slide\n            data={userAnswer}\n            currentSlide={slide}\n            updateAnswer={updateAnswer}\n          />\n\n          <div className=\"navigation\">\n            <Navigation\n              slide={slide}\n              prevSlide={prevSlide}\n              nextSlide={nextSlide}\n              dataLength={inputData.length}\n              disabledNextBtn={disabledNextBtn}\n            />\n\n            <ProgressBar\n              props={{ slidesCount: inputData.length, currentSlide: slide }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quizz;\n"]},"metadata":{},"sourceType":"module"}