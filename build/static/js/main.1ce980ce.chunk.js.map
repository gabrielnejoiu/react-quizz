{"version":3,"sources":["components/results.js","components/slide.js","components/inputData.js","components/progressBar.js","components/navigation.js","components/quizzWrapper.js","index.js"],"names":["Results","data","className","map","item","index","answers","answer","Slide","currentSlide","updateAnswer","useState","userAnswer","length","question","Answers","onClick","inputData","ProgressBar","props","percentage","width","slidesCount","style","Navigation","slide","prevSlide","disabledNextBtn","nextSlide","Quizz","setSlide","setUserAnswer","newObj","dataLength","App","ReactDom","render","document","getElementById"],"mappings":"2KAmBeA,EAjBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,sBAAKC,UAAU,QAAf,UACE,6DACA,6BACGD,EAAKE,KAAI,SAACC,EAAMC,GAAP,OACR,oBAAIH,UAAU,SAAd,sBACSG,EAAQ,EADjB,iBAEID,EAAKE,QAAQF,EAAKG,SAAW,eAFLF,YCgCvBG,EArCD,SAAC,GAA0C,IAAxCP,EAAuC,EAAvCA,KAAMQ,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACnC,EAAoCC,mBAASV,GAA7C,mBAAOW,EAAP,UAEA,GAAIX,EAAKY,SAAWJ,EAClB,OAAO,cAAC,EAAD,CAASR,KAAMW,IAGxB,MAA8BX,EAAKQ,GAA3BH,EAAR,EAAQA,QAASQ,EAAjB,EAAiBA,SAEXC,EAAU,WACd,OACE,6BACGT,EAAQH,KAAI,SAACI,EAAQF,GAAT,OACX,oBACEH,UAAS,iBACPU,EAAWH,GAAcF,SAAWF,EAAQ,WAAa,IAE3DW,QAAS,WACPN,EAAaL,IALjB,SASGE,GAFIF,SASf,OACE,sBAAKH,UAAU,QAAf,UACE,6BAAKY,IACL,cAACC,EAAD,QCTSE,EA1BG,CAChB,CACEH,SAAU,2CACVR,QAAS,CACP,mBACA,6BACA,kBACA,qBAGJ,CACEQ,SAAU,wBACVR,QAAS,CAAC,MAAO,OAEnB,CACEQ,SAAU,6DACVR,QAAS,CACP,sBACA,YACA,cACA,wBACA,wCCRSY,EAXK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACfC,EAAa,CACjBC,MAAQ,IAAMF,EAAMG,YAAeH,EAAMV,aAAe,KAE1D,OACE,qBAAKP,UAAU,eAAf,SACE,qBAAKA,UAAU,OAAOqB,MAAOH,OCSpBI,EAfI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UACvD,OACE,qCACE,qBACE1B,UAAS,2BAAgC,IAAVuB,EAAc,WAAa,IAC1DT,QAASU,IAEX,qBACExB,UAAS,4BAAuByB,EAAkB,WAAa,IAC/DX,QAASY,QC2DFC,EAhED,WACZ,MAA0BlB,mBAAS,GAAnC,mBAAOc,EAAP,KAAcK,EAAd,KACA,EAAoCnB,mBAASM,GAA7C,mBAAOL,EAAP,KAAmBmB,EAAnB,KAuBIJ,GAAkB,EAStB,OANEF,IAAUR,EAAUJ,QACgB,qBAA7BD,EAAWa,GAAOlB,SAEzBoB,GAAkB,GAIlB,qBAAKzB,UAAU,gBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,uCACA,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACED,KAAMW,EACNH,aAAcgB,EACdf,aAtCW,SAACL,GACpB,IAAM2B,EAAM,YAAOpB,GACnBoB,EAAOP,GAAOlB,OAASF,EACvB0B,EAAcC,MAsCR,sBAAK9B,UAAU,aAAf,UACE,cAAC,EAAD,CACEuB,MAAOA,EACPC,UA7BM,WACZD,EAAQ,GACVK,EAASL,EAAQ,IA4BTG,UAvCM,WAEdH,EAAQR,EAAUJ,SACY,IAA7BD,EAAWa,GAAOlB,QAAgBK,EAAWa,GAAOlB,SAErDuB,EAASL,EAAQ,IAmCTQ,WAAYhB,EAAUJ,OACtBc,gBAAiBA,IAGnB,cAAC,EAAD,CACER,MAAO,CAAEG,YAAaL,EAAUJ,OAAQJ,aAAcgB,iBCvD9DS,G,MAAM,WACV,OAAO,cAAC,EAAD,MAGTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1ce980ce.chunk.js","sourcesContent":["import { React } from \"react\";\n\nconst Results = ({ data }) => {\n  return (\n    <div className=\"slide\">\n      <h3>Please review your answers:</h3>\n      <ul>\n        {data.map((item, index) => (\n          <li className=\"result\" key={index}>\n            {`Q #${index + 1} - A: ${\n              item.answers[item.answer] || \"Not Taken!\"\n            }`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Results;\n","import { React, useState } from \"react\";\nimport Results from \"./results\";\n\nconst Slide = ({ data, currentSlide, updateAnswer }) => {\n  const [userAnswer, setUserAnswer] = useState(data);\n\n  if (data.length === currentSlide) {\n    return <Results data={userAnswer} />;\n  }\n\n  const { answers, question } = data[currentSlide];\n\n  const Answers = () => {\n    return (\n      <ul>\n        {answers.map((answer, index) => (\n          <li\n            className={`choice ${\n              userAnswer[currentSlide].answer === index ? \"selected\" : \"\"\n            }`}\n            onClick={() => {\n              updateAnswer(index);\n            }}\n            key={index}\n          >\n            {answer}\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"slide\">\n      <h3>{question}</h3>\n      <Answers />\n    </div>\n  );\n};\n\nexport default Slide;\n","const inputData = [\n  {\n    question: \"When do you plan on purchasing a new TV?\",\n    answers: [\n      \"Within the month\",\n      \"Within the next six months\",\n      \"Within the year\",\n      \"No current plans\",\n    ],\n  },\n  {\n    question: \"Are you a vegetarian?\",\n    answers: [\"Yes\", \"No\"],\n  },\n  {\n    question: \"How satisfied are you with your current internet provider?\",\n    answers: [\n      \"Extremely satisfied\",\n      \"Satisfied\",\n      \"Unsatisfied\",\n      \"Extremely Unsatisfied\",\n      \"I do not have an internet provider\",\n    ],\n  },\n];\n\nexport default inputData;\n","import { React } from \"react\";\n\nconst ProgressBar = ({ props }) => {\n  const percentage = {\n    width: (100 / props.slidesCount) * props.currentSlide + \"%\",\n  };\n  return (\n    <div className=\"progress_bar\">\n      <div className=\"fill\" style={percentage}></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import { React } from \"react\";\n\nconst Navigation = ({ slide, prevSlide, disabledNextBtn, nextSlide }) => {\n  return (\n    <>\n      <div\n        className={`arrow arrow_left ${slide === 0 ? \"inactive\" : \"\"}`}\n        onClick={prevSlide}\n      ></div>\n      <div\n        className={`arrow arrow_right ${disabledNextBtn ? \"inactive\" : \"\"}`}\n        onClick={nextSlide}\n      ></div>\n    </>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport Slide from \"./slide\";\nimport inputData from \"./inputData\";\nimport ProgressBar from \"./progressBar\";\nimport Navigation from \"./navigation\";\n\nconst Quizz = () => {\n  const [slide, setSlide] = useState(0);\n  const [userAnswer, setUserAnswer] = useState(inputData);\n\n  const updateAnswer = (index) => {\n    const newObj = [...userAnswer];\n    newObj[slide].answer = index;\n    setUserAnswer(newObj);\n  };\n\n  const nextSlide = () => {\n    if (\n      slide < inputData.length &&\n      (userAnswer[slide].answer === 0 || userAnswer[slide].answer)\n    ) {\n      setSlide(slide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (slide > 0) {\n      setSlide(slide - 1);\n    }\n  };\n\n  let disabledNextBtn = false;\n\n  if (\n    slide === inputData.length ||\n    typeof userAnswer[slide].answer === \"undefined\"\n  ) {\n    disabledNextBtn = true;\n  }\n\n  return (\n    <div className=\"quizz_wrapper\">\n      <div className=\"quizz_container\">\n        <h1>Quizz</h1>\n        <div className=\"quizz_slides\">\n          <Slide\n            data={userAnswer}\n            currentSlide={slide}\n            updateAnswer={updateAnswer}\n          />\n\n          <div className=\"navigation\">\n            <Navigation\n              slide={slide}\n              prevSlide={prevSlide}\n              nextSlide={nextSlide}\n              dataLength={inputData.length}\n              disabledNextBtn={disabledNextBtn}\n            />\n\n            <ProgressBar\n              props={{ slidesCount: inputData.length, currentSlide: slide }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quizz;\n","import { React } from \"react\";\nimport ReactDom from \"react-dom\";\nimport Quizz from \"./components/quizzWrapper\";\n\nimport \"./assets/css/index.css\";\n\nconst App = () => {\n  return <Quizz />;\n};\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}